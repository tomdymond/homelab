---
- name: add secrets
  include_vars: secrets.yml

- name: Turn off firewall
  service:
    name: firewalld
    enabled: no
    state: stopped

- name: Create stack dir
  file:
    path: /var/stacks/{{ stack_name }}-stack
    state: directory
    mode: 0755

- name: Generate docker-compose file
  template:
    src=docker-compose.yml.j2
    dest=/var/stacks/{{ stack_name }}-stack/docker-compose.yml
  when: ansible_env.MESOSPHERE_ROLE == "master"

- name: Copy service file for stack
  template:
    src=../common/templates/stack-oneshot.service.j2
    dest=/etc/systemd/system/{{ stack_name }}-stack.service
  when: ansible_env.MESOSPHERE_ROLE == "master"

- name: Create temp dir
  file:
    path: /tmp/dcos-{{ ansible_env.DCOS_VERSION }}
    state: directory
    mode: 0755

- name: Check if file is downloaded
  stat:
    path: /tmp/dcos-{{ ansible_env.DCOS_VERSION }}/dcos_install.sh
  register: dcos_install_exists

- name: Download DC/OS
  get_url:
    url: "http://{{ ansible_env.DCOS_BOOTSTRAP }}:80/dcos_install.sh"
    dest: /tmp/dcos-{{ ansible_env.DCOS_VERSION }}/dcos_install.sh
    mode: 0755
  when: dcos_install_exists.stat.exists == False

- name: Create group nogroup
  group:
    name: nogroup
    state: present  

- name: Check if DC/OS is already installed
  stat:
    path: /opt/mesosphere/
  register: dcos_installed

- name: Run DC/OS installer
  command: bash -c "/tmp/dcos-{{ ansible_env.DCOS_VERSION }}/dcos_install.sh {{ ansible_env.MESOSPHERE_ROLE }}"
  when: dcos_installed.stat.exists == False

- name: Restart service
  systemd:
    state: started
    name: "{{ stack_name }}-stack"
    enabled: yes
    daemon_reload: yes
  when: ansible_env.MESOSPHERE_ROLE == "master"

