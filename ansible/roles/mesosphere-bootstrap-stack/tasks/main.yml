---
- name: add secrets
  include_vars: secrets.yml

- name: Create genconf folder
  file:
    path: /opt/dcos-{{ ansible_env.DCOS_VERSION }}/{{ ansible_env.DCOS_EDITION }}/genconf
    state: directory

- name: Create genconf/serve folder
  file:
    path: /opt/dcos-{{ ansible_env.DCOS_VERSION }}/{{ ansible_env.DCOS_EDITION }}/genconf/serve
    state: directory

- name: Copy ipdetect script
  copy:
    src: ip-detect
    dest: /opt/dcos-{{ ansible_env.DCOS_VERSION }}/{{ ansible_env.DCOS_EDITION }}/genconf
    mode: 0755
    owner: root
    group: root

- name: Generate config.yaml
  template: 
    src: config.yaml.j2
    dest: /opt/dcos-{{ ansible_env.DCOS_VERSION }}/{{ ansible_env.DCOS_EDITION }}/genconf/config.yaml

- name: Generate license
  template:
    src: license.txt.j2
    dest: /opt/dcos-{{ ansible_env.DCOS_VERSION }}/{{ ansible_env.DCOS_EDITION }}/genconf/license.txt
  when: ansible_env.DCOS_EDITION == "enterprise"

- name: Check if DC/OS is already downloaded
  command: ls /opt/dcos-{{ ansible_env.DCOS_VERSION }}/{{ ansible_env.DCOS_EDITION }}/dcos_generate_config.sh
  register: dcos_downloaded
  ignore_errors: true

- name: Download DC/OS from mesosphere
  get_url:
    url: "{{ dcos[ansible_env.DCOS_EDITION] }}"
    dest: /opt/dcos-{{ ansible_env.DCOS_VERSION }}/{{ ansible_env.DCOS_EDITION }}/dcos_generate_config.sh

- name: Make DC/OS script executable
  file:
    path: /opt/dcos-{{ ansible_env.DCOS_VERSION }}/{{ ansible_env.DCOS_EDITION }}/dcos_generate_config.sh
    mode: 0755
    owner: root
    group: root

- name: Execute set superuser password
  command: "/opt/dcos-{{ ansible_env.DCOS_VERSION }}/{{ ansible_env.DCOS_EDITION }}/dcos_generate_config.sh --set-superuser-password {{ mesosphere_superuser_password }}"
  args:
    chdir: /opt/dcos-{{ ansible_env.DCOS_VERSION }}/{{ ansible_env.DCOS_EDITION }}
  
- name: Execute dcos_generate_config.sh
  command: "/opt/dcos-{{ ansible_env.DCOS_VERSION }}/{{ ansible_env.DCOS_EDITION }}/dcos_generate_config.sh --genconf"
  args:
    chdir: /opt/dcos-{{ ansible_env.DCOS_VERSION }}/{{ ansible_env.DCOS_EDITION }}

- name: Create stack dir
  file:
    path: /var/stacks/{{ stack_name }}-stack
    state: directory
    mode: 0755

- name: Generate docker-compose file
  template:
    src=docker-compose.yml.j2
    dest=/var/stacks/{{ stack_name }}-stack/docker-compose.yml

- name: Copy service file for stack
  template:
    src=../common/templates/stack.service.j2
    dest=/etc/systemd/system/{{ stack_name }}-stack.service

- name: Restart service
  systemd:
    state: started
    name: "{{ stack_name }}-stack"
    enabled: yes
    daemon_reload: yes

